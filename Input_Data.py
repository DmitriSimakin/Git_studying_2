# -*- coding: utf-8 -*-
"""
Created on Tue Jun 15 15:38:37 2021

@author: Сергей Валентинович
"""



import numpy as np

"""
def Input_B_H_1(B,H):
    
    B[0,:]= [0.0, 0.0];   H[0]=1    
    B[1,:]= [1.0, 2.0];   H[1]=1   
    B[2,:]= [2.5, 0.0];   H[2]=1
    B[3,:]= [4.0, 2.0];   H[3]=1  
    B[4,:]= [5.0, 0.0];   H[4]=1
    return;
    
def Input_B_H_2(B,H):
    
    B[0,:]= [0.0, 0.0];   H[0]=1    
    B[1,:]= [1.0, 1.0];   H[1]=4   
    B[2,:]= [3, 2.0];     H[2]=1
    B[3,:]= [4.0, 2.0];   H[3]=1
    B[4,:]= [5.0, -1.0];  H[4]=1
    return;    


def Input_B_H_3(B,H):
    
    B[0,:]= [1.0, 1.0];   H[0]=1    
    B[1,:]= [2.0, 3.0];   H[1]=1/2   
    B[2,:]= [4.0, 3.0];   H[2]=1
    B[3,:]= [3.0, 1.0];   H[3]=1
    return;    

def Input_B_H_4(B,H):
    
    B[0,:]= [2.5, 2.8];     H[0]=1    
    B[1,:]= [5.0, 8.0];    H[1]= 1   #-0.3   
    B[2,:]= [11.3, 8.0];   H[2]=1
    B[3,:]= [12.5, 2.8];   H[3]=1  
    B[4,:]= [15.0, 5.2];  H[4]=1    
    return;

def Input_B_H_5(B,H):
    
    B[0,:]= [1.0, 1.0];     H[0]=1    
    B[1,:]= [2.0, 3.0];     H[1]=1   
    B[2,:]= [4.0, 3.0];     H[2]=1
    B[3,:]= [3.0, 1.0];     H[3]=1
    return;    


def Input_B_H_6(B,H):
    
    B[0,:]= [0.0, 0.0];   H[0]=1
    B[1,:]= [3.0, 9.0];   H[1]=1   
    B[2,:]= [6.0, 3.0];   H[2]=1
    B[3,:]= [9.0, 7.5];   H[3]=1
    return;

def Input_B_H_7(B,H):
    
    B[0,:]= [0.0, 0.0];   H[0]=1
    B[1,:]= [3.0, 9.0];   H[1]=1 
    B[2,:]= [3.0, 9.0];   H[2]=1     
    B[3,:]= [6.0, 3.0];   H[3]=1
    B[4,:]= [9.0, 7.5];   H[4]=1
    return;

def Input_B_H_8(B,H):
    
    B[0,:]= [0.0, 0.0];   H[0]=1
    B[1,:]= [3.0, 9.0];   H[1]=1 
    B[2,:]= [3.0, 9.0];   H[2]=1     
    B[3,:]= [3.0, 9.0];   H[3]=1     
    B[4,:]= [6.0, 3.0];   H[4]=1
    B[5,:]= [9.0, 7.5];   H[5]=1
    return;    
    
    
def Input_B_H_8_1(B,H):
    
    B[0,:]= [2.0, 0.0];    H[0]=1
    B[1,:]= [3.0, 11.0];    H[1]=1 
    B[2,:]= [6.0, 12.5];    H[2]=1     
    B[3,:]= [9.0, 5.0];    H[3]=1     
    B[4,:]= [12.0, 12.0];    H[4]=1
    B[5,:]= [15.0, 10.0];   H[5]=1
    B[6,:]= [13.0, 1.0];   H[6]=1
    return;  
"""    
def Input_B_H_Chapter_5_3(B,H):
    
    B[0,:]= [  2.0, 6.0*0];    H[0]=1
    B[1,:]= [  4.5, 5.0-2*1];    H[1]=1 
    B[2,:]= [  8.8, 4.8];    H[2]=1 
    B[3,:]= [ 12.7, 3.8];    H[3]=1     
    B[4,:]= [ 15.5, 2.5];    H[4]=1     
    B[5,:]= [19.0,  1.0];    H[5]=1
      
   
    return;     
    
    
def Input_P_Q_Fig_2a_Hu_SM_2001(P,HP,Q,HQ,R,HR):
    """
    P[0,:]= [ 2.0, 2.0];    HP[0]=1
    P[1,:]= [ 3.0, 7.0];    HP[1]=1 
    P[2,:]= [ 8.0,12.0];    HP[2]=1     
    P[3,:]= [15.0,13.0];    HP[3]=1 
    
    Q[0,:]= [15.0,13.0];    HQ[0]=1
    Q[1,:]= [22.0,14.0];    HQ[1]=1 
    Q[2,:]= [27.0, 9.0];    HQ[2]=1     
    Q[3,:]= [28.0, 2.0];    HQ[3]=1 
    """
    """
    # На Этих Всё Работаем, но Мu не считается (там 0/0)/ Задал Mu=1
    P[0,:]= [ 2.0, 2.0];    HP[0]=1
    P[1,:]= [ 6.0, 6.0];    HP[1]=1 
    P[2,:]= [10.0, 8.0];    HP[2]=1     
    P[3,:]= [14.0, 8.0];    HP[3]=1 
    
    Q[0,:]= [14.0, 8.0];    HQ[0]=1
    Q[1,:]= [18.0, 8.0];    HQ[1]=1 
    Q[2,:]= [22.0, 6.0];    HQ[2]=1     
    Q[3,:]= [26.0, 2.0];    HQ[3]=1 
    """

    P[0,:]= [ 0.0, 0.0];    HP[0]=1
    P[1,:]= [ 4.5,14.0];    HP[1]=1 
    P[2,:]= [19.0,23.0];    HP[2]=1     
    P[3,:]= [35.5-0*0.5,24.0-0*1.2];    HP[3]=1 
    
    #Q[0,:]= [35.5+0*0.5,24.0+0*1.2];    HQ[0]=1
    #Q[1,:]= [52.0+0,25.0+0];    HQ[1]=1 
    #Q[2,:]= [63.5,17.0];    HQ[2]=1     
    #Q[3,:]= [66.5, 0.0];    HQ[3]=1 

    Q[0,:]= [35.5,24.0];    HQ[0]=1
    Q[1,:]= [52.0+8,25.0];    HQ[1]=1 
    Q[2,:]= [70.5,18.0];    HQ[2]=1     
    Q[3,:]= [83.0-0, 0.0+0];    HQ[3]=1 



    
    R[0,:]= [ 0.0, 0.0];    HR[0]=1
    R[1,:]= [ 8.0,28.5];    HR[1]=1 
    R[2,:]= [61.0,36.5];    HR[2]=1     
    R[3,:]= [66.5, 0.0];    HR[3]=1 
    
    return;


def Input_P_Q_Fig_2a_Hu_SM_2001__1(P,HP,Q,HQ,R,HR):
   
  

    P[0,:]= [ 0.0, 17.0];    HP[0]=1
    P[1,:]= [ 4.5,20.0];    HP[1]=1 
    P[2,:]= [19.0,23.0];    HP[2]=1     
    P[3,:]= [35.5-0*0.5,24.0-0*1.2];    HP[3]=1 
    
    #Q[0,:]= [35.5+0*0.5,24.0+0*1.2];    HQ[0]=1
    #Q[1,:]= [52.0+0,25.0+0];    HQ[1]=1 
    #Q[2,:]= [63.5,17.0];    HQ[2]=1     
    #Q[3,:]= [66.5, 0.0];    HQ[3]=1 

    Q[0,:]= [35.5,24.0];    HQ[0]=1
    Q[1,:]= [52.0+8,23.0];    HQ[1]=1 
    Q[2,:]= [70.5,18.0];    HQ[2]=1     
    Q[3,:]= [83.0-0, 15.0+0];    HQ[3]=1 



    
    R[0,:]= [ 0.0, 0.0];    HR[0]=1
    R[1,:]= [ 8.0,28.5];    HR[1]=1 
    R[2,:]= [61.0,36.5];    HR[2]=1     
    R[3,:]= [66.5, 0.0];    HR[3]=1 
    
    return;


def Calculation_U_Open_Uniform(p, n, m, U):
    #print("type(U)=",type(U))
    #print("np.shape(U)=",np.shape(U))
    #print("np.size(U)=",np.size(U))
    
    #U=[0., 1., 2., 3., 4., 5., 6.]
    #print("*2* p=",p," m=",m," n=",n," U=",U)
    
    for i in range(0, p+1):
        U[i] = 0
    for i in range(p+1, m-p+1):
        U[i] = U[i-1]+1
    for i in range(m-p+1, m+1):
        U[i] = U[m-p]
    
    #print("*3* p=",p," m=",m," n=",n," U=",U)









